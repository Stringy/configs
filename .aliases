#!/bin/bash

function _echo_and_run() {
    echo "[*]" $@
    eval $@
}

function _ssh_add_if_not_exists() {
    if ssh-add -l | grep -q "$(ssh-keygen -lf "${1}" | awk '{print $2}')"; then
        echo "[*] ${1} has already been added to the ssh agent"
    else
        _echo_and_run ssh-add "${1}"
    fi
}

if [ -x "$(command -v gcloud)" ];
then
    echo "[*] installing gcp functions"
    #Â gcloud aliases
    function gcpssh() (
        PROJECT=$1
        HOST=$2
        shift;shift;
        _echo_and_run gcloud compute ssh $@ --project ${PROJECT} ${HOST}
    )

    function gcpscp() (
        PROJECT=$1
        FROM=$2
        TO=$3
        shift;shift;shift;
        _echo_and_run gcloud compute scp $@ --project ${PROJECT} ${FROM} ${TO}
    )

    if [[ -e "${HOME}/.ssh/google_compute_engine" ]]; then
        _ssh_add_if_not_exists "${HOME}/.ssh/google_compute_engine"
    fi
else
    echo "[*] gcloud not installed"
fi

alias vim="nvim"

function cdgo() {
    if [[ -z "${GOPATH}" ]]; then
        echo "[*] no GOPATH set"
        exit 1
    fi

    _echo_and_run cd "${GOPATH}/src/${1}"
}

function cdc() {
    _echo_and_run cd "${HOME}/code/collector-dev/"
}

function gcsource() {
    local name="$1"
    local config_file="$HOME/.gcloud-config/${name}"
    if [[ ! -e "${config_file}" ]]; then
        echo "[*] no gcloud config for ${name}"
        echo "[*] ${config_file} does not exist"
        return 1;
    fi
    _echo_and_run source "$HOME/.gcloud-config/${name}"
}

function _gc_complete() {
    [[ -d "${HOME}/.gcloud-config/" ]] || return
    COMPREPLY=($(cd "${HOME}/.gcloud-config/" && compgen -f))
}

complete -F _gc_complete gcsource

function gcreset() {
    gcsource reset
}

if command -v vagrant &> /dev/null; then
    echo "[*] installing vagrant aliases"
    alias vup="vagrant up"
    alias vdown="vagrant halt"

    function vssh() {
        local name="$1"
        shift
        (cd "${HOME}/vagrant/${name}" && vagrant ssh -- "$@" )
    }

    function vcd() {
        cd "${HOME}/vagrant/${1}"
    }

    function vssh-add() {
        _ssh_add_if_not_exists "${HOME}/vagrant/${1}/.vagrant/machines/default/virtualbox/private_key"
    }

    function vagrant_complete() {
        [[ -d "${HOME}/vagrant/" ]] || return
        COMPREPLY=($(cd "${HOME}/vagrant/" && compgen -d))
    }

    complete -F vagrant_complete vssh
    complete -F vagrant_complete vcd
    complete -F vagrant_complete vssh-add
fi

if command -v kubectl &> /dev/null; then
    echo "[*] installing kubectl aliases"
    alias klogs="kubectl logs"
    alias kpods="kubectl get pods"

    function kpod_logs() {
        local POD=$(kubectl get pods -n stackrox | grep ${1} | awk '{print $1}')
        kubectl logs -n stackrox ${POD} ${1}
    }

    function kcollector_logs() {
        kpod_logs collector
    }

    function ksensor_logs() {
        kpod_logs sensor
    }
fi
